# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import api_pb2 as api__pb2


class ApiStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetMarkets = channel.unary_unary(
                '/api.Api/GetMarkets',
                request_serializer=api__pb2.GetMarketsRequest.SerializeToString,
                response_deserializer=api__pb2.GetMarketsResponse.FromString,
                )
        self.GetTicker = channel.unary_unary(
                '/api.Api/GetTicker',
                request_serializer=api__pb2.GetTickerRequest.SerializeToString,
                response_deserializer=api__pb2.GetTickerResponse.FromString,
                )
        self.GetKline = channel.unary_unary(
                '/api.Api/GetKline',
                request_serializer=api__pb2.GetKlineRequest.SerializeToString,
                response_deserializer=api__pb2.GetKlineResponse.FromString,
                )
        self.GetOrderbook = channel.unary_unary(
                '/api.Api/GetOrderbook',
                request_serializer=api__pb2.GetOrderBookRequest.SerializeToString,
                response_deserializer=api__pb2.GetOrderbookResponse.FromString,
                )
        self.GetTrades = channel.unary_unary(
                '/api.Api/GetTrades',
                request_serializer=api__pb2.GetTradesRequest.SerializeToString,
                response_deserializer=api__pb2.GetTradesResponse.FromString,
                )
        self.GetServerTime = channel.unary_unary(
                '/api.Api/GetServerTime',
                request_serializer=api__pb2.GetServerTimeRequest.SerializeToString,
                response_deserializer=api__pb2.GetServerTimeResponse.FromString,
                )
        self.GetAccountBalance = channel.unary_unary(
                '/api.Api/GetAccountBalance',
                request_serializer=api__pb2.GetAccountBalanceRequest.SerializeToString,
                response_deserializer=api__pb2.GetAccountBalanceResponse.FromString,
                )
        self.PostOrder = channel.unary_unary(
                '/api.Api/PostOrder',
                request_serializer=api__pb2.PostOrderRequest.SerializeToString,
                response_deserializer=api__pb2.PostOrderResponse.FromString,
                )
        self.PostCancelOrder = channel.unary_unary(
                '/api.Api/PostCancelOrder',
                request_serializer=api__pb2.PostCancelOrderRequest.SerializeToString,
                response_deserializer=api__pb2.PostCancelOrderResponse.FromString,
                )
        self.PostCancelAll = channel.unary_unary(
                '/api.Api/PostCancelAll',
                request_serializer=api__pb2.PostCancelAllRequest.SerializeToString,
                response_deserializer=api__pb2.PostCancelAllResponse.FromString,
                )
        self.PostSettle = channel.unary_unary(
                '/api.Api/PostSettle',
                request_serializer=api__pb2.PostSettleRequest.SerializeToString,
                response_deserializer=api__pb2.PostSettleResponse.FromString,
                )
        self.GetOrders = channel.unary_unary(
                '/api.Api/GetOrders',
                request_serializer=api__pb2.GetOrdersRequest.SerializeToString,
                response_deserializer=api__pb2.GetOrdersResponse.FromString,
                )
        self.GetOpenOrders = channel.unary_unary(
                '/api.Api/GetOpenOrders',
                request_serializer=api__pb2.GetOpenOrdersRequest.SerializeToString,
                response_deserializer=api__pb2.GetOpenOrdersResponse.FromString,
                )
        self.GetOrderByID = channel.unary_unary(
                '/api.Api/GetOrderByID',
                request_serializer=api__pb2.GetOrderByIDRequest.SerializeToString,
                response_deserializer=api__pb2.GetOrderByIDResponse.FromString,
                )
        self.GetUnsettled = channel.unary_unary(
                '/api.Api/GetUnsettled',
                request_serializer=api__pb2.GetUnsettledRequest.SerializeToString,
                response_deserializer=api__pb2.GetUnsettledResponse.FromString,
                )
        self.GetOrderbookUpdates = channel.unary_stream(
                '/api.Api/GetOrderbookUpdates',
                request_serializer=api__pb2.GetOrderBookRequest.SerializeToString,
                response_deserializer=api__pb2.GetOrderbookStreamResponse.FromString,
                )
        self.GetTickerUpdates = channel.unary_stream(
                '/api.Api/GetTickerUpdates',
                request_serializer=api__pb2.GetTickerRequest.SerializeToString,
                response_deserializer=api__pb2.GetTickerStreamResponse.FromString,
                )
        self.GetMarketDepthUpdates = channel.unary_stream(
                '/api.Api/GetMarketDepthUpdates',
                request_serializer=api__pb2.GetMarketsRequest.SerializeToString,
                response_deserializer=api__pb2.GetMarketDepthStreamResponse.FromString,
                )
        self.GetTradeUpdates = channel.unary_stream(
                '/api.Api/GetTradeUpdates',
                request_serializer=api__pb2.GetTradesRequest.SerializeToString,
                response_deserializer=api__pb2.GetTradesStreamResponse.FromString,
                )


class ApiServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetMarkets(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTicker(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetKline(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOrderbook(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTrades(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetServerTime(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAccountBalance(self, request, context):
        """account endpoints
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PostOrder(self, request, context):
        """trade endpoints
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PostCancelOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PostCancelAll(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PostSettle(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOrders(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOpenOrders(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOrderByID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUnsettled(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOrderbookUpdates(self, request, context):
        """streaming endpoints
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTickerUpdates(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMarketDepthUpdates(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTradeUpdates(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ApiServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetMarkets': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMarkets,
                    request_deserializer=api__pb2.GetMarketsRequest.FromString,
                    response_serializer=api__pb2.GetMarketsResponse.SerializeToString,
            ),
            'GetTicker': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTicker,
                    request_deserializer=api__pb2.GetTickerRequest.FromString,
                    response_serializer=api__pb2.GetTickerResponse.SerializeToString,
            ),
            'GetKline': grpc.unary_unary_rpc_method_handler(
                    servicer.GetKline,
                    request_deserializer=api__pb2.GetKlineRequest.FromString,
                    response_serializer=api__pb2.GetKlineResponse.SerializeToString,
            ),
            'GetOrderbook': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOrderbook,
                    request_deserializer=api__pb2.GetOrderBookRequest.FromString,
                    response_serializer=api__pb2.GetOrderbookResponse.SerializeToString,
            ),
            'GetTrades': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTrades,
                    request_deserializer=api__pb2.GetTradesRequest.FromString,
                    response_serializer=api__pb2.GetTradesResponse.SerializeToString,
            ),
            'GetServerTime': grpc.unary_unary_rpc_method_handler(
                    servicer.GetServerTime,
                    request_deserializer=api__pb2.GetServerTimeRequest.FromString,
                    response_serializer=api__pb2.GetServerTimeResponse.SerializeToString,
            ),
            'GetAccountBalance': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAccountBalance,
                    request_deserializer=api__pb2.GetAccountBalanceRequest.FromString,
                    response_serializer=api__pb2.GetAccountBalanceResponse.SerializeToString,
            ),
            'PostOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.PostOrder,
                    request_deserializer=api__pb2.PostOrderRequest.FromString,
                    response_serializer=api__pb2.PostOrderResponse.SerializeToString,
            ),
            'PostCancelOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.PostCancelOrder,
                    request_deserializer=api__pb2.PostCancelOrderRequest.FromString,
                    response_serializer=api__pb2.PostCancelOrderResponse.SerializeToString,
            ),
            'PostCancelAll': grpc.unary_unary_rpc_method_handler(
                    servicer.PostCancelAll,
                    request_deserializer=api__pb2.PostCancelAllRequest.FromString,
                    response_serializer=api__pb2.PostCancelAllResponse.SerializeToString,
            ),
            'PostSettle': grpc.unary_unary_rpc_method_handler(
                    servicer.PostSettle,
                    request_deserializer=api__pb2.PostSettleRequest.FromString,
                    response_serializer=api__pb2.PostSettleResponse.SerializeToString,
            ),
            'GetOrders': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOrders,
                    request_deserializer=api__pb2.GetOrdersRequest.FromString,
                    response_serializer=api__pb2.GetOrdersResponse.SerializeToString,
            ),
            'GetOpenOrders': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOpenOrders,
                    request_deserializer=api__pb2.GetOpenOrdersRequest.FromString,
                    response_serializer=api__pb2.GetOpenOrdersResponse.SerializeToString,
            ),
            'GetOrderByID': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOrderByID,
                    request_deserializer=api__pb2.GetOrderByIDRequest.FromString,
                    response_serializer=api__pb2.GetOrderByIDResponse.SerializeToString,
            ),
            'GetUnsettled': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUnsettled,
                    request_deserializer=api__pb2.GetUnsettledRequest.FromString,
                    response_serializer=api__pb2.GetUnsettledResponse.SerializeToString,
            ),
            'GetOrderbookUpdates': grpc.unary_stream_rpc_method_handler(
                    servicer.GetOrderbookUpdates,
                    request_deserializer=api__pb2.GetOrderBookRequest.FromString,
                    response_serializer=api__pb2.GetOrderbookStreamResponse.SerializeToString,
            ),
            'GetTickerUpdates': grpc.unary_stream_rpc_method_handler(
                    servicer.GetTickerUpdates,
                    request_deserializer=api__pb2.GetTickerRequest.FromString,
                    response_serializer=api__pb2.GetTickerStreamResponse.SerializeToString,
            ),
            'GetMarketDepthUpdates': grpc.unary_stream_rpc_method_handler(
                    servicer.GetMarketDepthUpdates,
                    request_deserializer=api__pb2.GetMarketsRequest.FromString,
                    response_serializer=api__pb2.GetMarketDepthStreamResponse.SerializeToString,
            ),
            'GetTradeUpdates': grpc.unary_stream_rpc_method_handler(
                    servicer.GetTradeUpdates,
                    request_deserializer=api__pb2.GetTradesRequest.FromString,
                    response_serializer=api__pb2.GetTradesStreamResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'api.Api', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Api(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetMarkets(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.Api/GetMarkets',
            api__pb2.GetMarketsRequest.SerializeToString,
            api__pb2.GetMarketsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTicker(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.Api/GetTicker',
            api__pb2.GetTickerRequest.SerializeToString,
            api__pb2.GetTickerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetKline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.Api/GetKline',
            api__pb2.GetKlineRequest.SerializeToString,
            api__pb2.GetKlineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOrderbook(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.Api/GetOrderbook',
            api__pb2.GetOrderBookRequest.SerializeToString,
            api__pb2.GetOrderbookResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTrades(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.Api/GetTrades',
            api__pb2.GetTradesRequest.SerializeToString,
            api__pb2.GetTradesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetServerTime(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.Api/GetServerTime',
            api__pb2.GetServerTimeRequest.SerializeToString,
            api__pb2.GetServerTimeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAccountBalance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.Api/GetAccountBalance',
            api__pb2.GetAccountBalanceRequest.SerializeToString,
            api__pb2.GetAccountBalanceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PostOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.Api/PostOrder',
            api__pb2.PostOrderRequest.SerializeToString,
            api__pb2.PostOrderResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PostCancelOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.Api/PostCancelOrder',
            api__pb2.PostCancelOrderRequest.SerializeToString,
            api__pb2.PostCancelOrderResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PostCancelAll(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.Api/PostCancelAll',
            api__pb2.PostCancelAllRequest.SerializeToString,
            api__pb2.PostCancelAllResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PostSettle(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.Api/PostSettle',
            api__pb2.PostSettleRequest.SerializeToString,
            api__pb2.PostSettleResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOrders(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.Api/GetOrders',
            api__pb2.GetOrdersRequest.SerializeToString,
            api__pb2.GetOrdersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOpenOrders(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.Api/GetOpenOrders',
            api__pb2.GetOpenOrdersRequest.SerializeToString,
            api__pb2.GetOpenOrdersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOrderByID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.Api/GetOrderByID',
            api__pb2.GetOrderByIDRequest.SerializeToString,
            api__pb2.GetOrderByIDResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUnsettled(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.Api/GetUnsettled',
            api__pb2.GetUnsettledRequest.SerializeToString,
            api__pb2.GetUnsettledResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOrderbookUpdates(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/api.Api/GetOrderbookUpdates',
            api__pb2.GetOrderBookRequest.SerializeToString,
            api__pb2.GetOrderbookStreamResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTickerUpdates(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/api.Api/GetTickerUpdates',
            api__pb2.GetTickerRequest.SerializeToString,
            api__pb2.GetTickerStreamResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMarketDepthUpdates(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/api.Api/GetMarketDepthUpdates',
            api__pb2.GetMarketsRequest.SerializeToString,
            api__pb2.GetMarketDepthStreamResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTradeUpdates(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/api.Api/GetTradeUpdates',
            api__pb2.GetTradesRequest.SerializeToString,
            api__pb2.GetTradesStreamResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
